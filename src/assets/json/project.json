{
  "items": [
    {
      "id": 1,
      "name": "CarKeeper(카키퍼)",
      "summary": "차박 중 차량 외부 외부인/야생동물(이하, 대상)의 접근, 차량 내부 유해가스 위험 상황을 감지하여 사용자에게 알려주는 서비스 입니다. 사용자가 차박 중 자주 일어나는 위험 상황으로부터 신속하게 대응할 수 있도록 도와줌으로써, 안전한 차박을 제공합니다.",
      "date": "2022.06 ~ 2022.12(6개월)",
      "scale": "임베디드 SW 학술 동아리원 4명",
      "category": ["IoT", "Cloud", "Mobile"],
      "keyword": [
        "Figma",
        "Dart",
        "Flutter",
        "Python",
        "Flask",
        "WebSocket",
        "Firebase Firestore",
        "JavaScript",
        "Firebase Cloud Functions",
        "Firebase Cloud Messaging",
        "Raspberry Pi 4",
        "Pi Camera",
        "Ultrasonic Sensor",
        "Pan Tilt Motor",
        "Arduino",
        "MQTT",
        "Mosquitto",
        "Git"
      ],
      "role": [
        [
          "영상 스트리밍 API, 웹소켓 서버 구현",
          "라즈베리파이에 연결된 카메라로 촬영되는 실시간 영상을 HTTP 프로토콜로 전송하는 Flask API를 개발했습니다. 영상을 외부망에서도 확인할 수 있도록 포트포워딩도 진행했습니다. 또한 Websocket을 이용하여 실시간 영상을 모바일 앱으로 안정적으로 볼 수 있도록 구현했습니다."
        ],
        [
          "실시간 영상 확인 모바일 애플리케이션 페이지 구현",
          "Websocket으로 전송받은 실시간 영상을 Flutter 애플리케이션에서 확인할 수 있도록 페이지를 구현했습니다."
        ],
        [
          "실시간 초음파 센서 데이터와 실시간 영상 속 객체의 좌표 전송 기능",
          "MQTT 프로토콜을 이용하여 라즈베리파이에 연결된 초음파 센서로부터 수집한 대상과 차량의 실시간 거리를 '대상 위치 및 접근 감지' 서버로 전송합니다. 또한 해당 서버에서 계산한 실시간 영상 속 대상의 좌표를 다시 라즈베리파이로 전송합니다."
        ],
        [
          "대상 좌표 데이터 기반 원격 카메라 각도 실시간 제어 기능",
          "카메라가 연결된 라즈베리파이에서는 MQTT 프로토콜로 대상의 실시간 좌표를 수신하고, 이를 기반으로 두 개의 서보모터(각각 상/하, 좌/우 조절)를 제어하여 카메라의 각도가 대상을 트래킹하도록 구현했습니다. 이를 통해 카메라와 함께 움직이는 초음파 센서도 더욱 정확하게 대상과 차량 사이의 거리를 측정할 수 있었습니다."
        ],
        [
          "Firebase Firestore 이벤트 감지 설정 및 모바일 메시지 자동 전송 기능",
          "Firebase의 Cloud Function 기능으로 Firestore에서 '대상 접근 판단 변수'가 True로 변하거나, '유해가스 농도'가 주의/위험 수준으로 변하는 경우를 감지합니다. 이벤트가 감지되면 Cloud Function이 작동하여 Cloud Messaging을 이용하여 메시지를 자동으로 생성하고 모바일 애플리케이션으로 전송합니다."
        ]
      ],
      "trouble": [
        [
          "실시간 영상 API에서 FPS 변경",
          "실시간 영상 API를 YOLOv5를 이용하는 서버에서 이용할 때, 서버 성능이 저하되는 것을 발견했습니다. 실시간 영상 API에서 FPS(Frame per Second) 설정을 낮추어 연산량을 줄여 성능을 개선했습니다."
        ],
        [
          "좌표 값에 따른 서보모터 제어 방식 개선",
          "초기에는 매 프레임마다 [(영상 프레임의 중앙 x, y 좌표) - (대상 박스의 중앙 x, y 좌표)] 값에 '비례'하게 서보 모터 제어 각도를 설정했습니다. 하지만 대상이 빠르게 움직이고, 서보모터 제어 시간도 고려해야하기 때문에 해당 방식의 한계를 깨달았습니다. 이후 좌표 데이터에서 '이동 방향'만 추출하고 프레임마다 '단위 각도'만큼 움직이도록 설정하였습니다. 또한 정확한 서보모터 제어를 위해 제어하는 동안에는 프로그램을 일정 시간동안 Sleep 하도록 설정했습니다. "
        ]
      ],
      "result": "제 20회 임베디드 소프트웨어 경진대회 자동차/모빌리티 부문 최우수상 (부문 1위)",
      "url": "https://github.com/KOBOTBOARD-11/2022ESWContest_mobility_6017"
    },
    {
      "id": 2,
      "name": "Booriya!(불이야!)",
      "summary": "화재 발생 시 건물 CCTV 영상을 기반으로 건물 관리자 및 출동 중인 소방관들에게 실시간으로 화재 현장 정보(초기 화재 발생 장소, 구조 대상자 등)를 제공해, 화재 진압과 인명 구조에 도움을 줄 수 있는 모바일 어플리케이션 서비스입니다.",
      "date": "2022.06 ~ 2022.12(6개월)",
      "scale": "임베디드 SW 학술 동아리원 4명",
      "role": [
        [
          "영상 스트리밍 API, 웹소켓 서버 구현",
          "라즈베리파이에 연결된 카메라로 촬영되는 실시간 영상을 HTTP 프로토콜로 전송하는 Flask API를 개발했습니다. 영상을 외부망에서도 확인할 수 있도록 포트포워딩도 진행했습니다. 또한 Websocket을 이용하여 실시간 영상을 모바일 앱으로 안정적으로 볼 수 있도록 구현했습니다."
        ],
        [
          "실시간 영상 확인 모바일 애플리케이션 페이지 구현",
          "Websocket으로 전송받은 실시간 영상을 Flutter 애플리케이션에서 확인할 수 있도록 페이지를 구현했습니다."
        ],
        [
          "Firebase Firestore 이벤트 감지 설정 및 모바일 메시지 자동 전송 기능",
          "Firebase의 Cloud Function 기능으로 Firestore에서 '초기 화재 감지 변수'나 '구조인원 감지 변수'가 True로 변하는 경우를 감지합니다. 이벤트가 감지되면 Cloud Function이 작동하여 Cloud Messaging을 이용하여 메시지를 자동으로 생성하고 모바일 애플리케이션으로 전송합니다."
        ]
      ],
      "category": ["IoT", "Cloud", "Mobile"],
      "keyword": [
        "Figma",
        "Dart",
        "Flutter",
        "Python",
        "Flask",
        "WebSocket",
        "Firebase Firestore",
        "JavaScript",
        "Firebase Cloud Functions",
        "Firebase Cloud Messaging",
        "Raspberry Pi",
        "Git"
      ],
      "trouble": [
        [
          "실시간 영상 API에서 FPS 변경",
          "실시간 영상 API를 YOLOv5를 이용하는 서버에서 이용할 때, 서버 성능이 저하되는 것을 발견했습니다. 실시간 영상 API에서 FPS(Frame per Second) 설정을 낮추어 연산량을 줄여 성능을 개선했습니다."
        ]
      ],
      "result": "제 16회 공개SW 개발자 대회(사회문제형) 본선 진출 및 우수작 선정",
      "url": "https://github.com/KOBOTBOARD-11/OSS_2022"
    },
    {
      "id": 3,
      "name": "How Cook?",
      "summary": "냉장고 속 남은 재료들이나 마트 영수증을 촬영하여 사진애서 인식한 재료들로 만들 수 있는 레시피를 추천 받고, 검색할 수 있도록 도와주는 서비스입니다. ",
      "date": "2022.01 ~ 2022.06(6개월)",
      "scale": "소프트웨어전공 학부생 4명",
      "role": [
        [
          "유저, 레시피 CRUD API 구현 및 API 테스트 환경 조성",
          "Express 기반으로 API Layer를 3단계(controller, service, repository)로 나누고 TypeORM을 사용하여 유저, 레시피 CRUD API를 구현했습니다. 또한 Postman과 REST client를 이용하여 API 테스트 환경을 조성했습니다. 또한 Live Share를 이용하여 팀원과 함께 실시간으로 코드를 작성하고 테스트를 진행했습니다."
        ],
        [
          "재료 이미지 및 영수증 속 재료 리스트 반환 API 구현 및 배포",
          "FastAPI를 기반으로 재료 이미지와 영수증 속 재료 리스트를 반환하는 API를 구현하고, Heroku로 배포했습니다. 클라이언트에서 받은 이미지를 디코딩하여 인공지능 모델에 넣어 재료 리스트를 반환합니다."
        ],
        [
          "재료 이미지 및 영수증 전송 후 재료 리스트 결과 페이지 이동 구현",
          "React를 기반으로 재료 이미지와 영수증을 인코딩하여 API를 통해 재료 리스트를 요청하고 Recoil을 이용해 결과를 저장합니다. 응답 후 페이지를 이동하여 저장된 재료 리스트를 띄워주는 기능을 구현했습니다. 구현한 컴포넌트의 재사용성을 높이기 위해 Styled-Components를 사용했습니다."
        ]
      ],
      "category": ["Web"],
      "keyword": [
        "Figma",
        "JavaScript",
        "TypeScript",
        "React",
        "Recoil",
        "Styled-Components",
        "Node.js",
        "Express",
        "TypeORM",
        "Python",
        "FastAPI",
        "Heroku",
        "REST Client(vscode)",
        "Postman",
        "Git"
      ],
      "trouble": [
        [
          "재료 이미지, 영수증 속 재료 리스트 반환 API 요청 후 지연시간 발생",
          "재료 리스트를 받아오는 동안 인공지능 모델 연산 시간으로 인해 지연시간이 발생했습니다. 사용자 경험을 개선하기 위헤 로딩 모달을 구현했습니다."
        ],
        [
          "Heroku 배포 후 메모리 초과 발생",
          "재료 이미지 및 영수증 속 재료 리스트 반환 API를 Heroku에 배포한 이후 요청이 많아질수록 5** 응답 코드가 발생하는 것을 확인했습니다. Heroku를 무료 버전으로 사용하면서 적은 메모리 설정 때문에 발생한 문제였습니다. 이를 통해 적절한 메모리 설정의 중요성을 깨달았습니다."
        ]
      ],
      "result": "교내 캡스톤디자인 최종발표회 최우수상(1위), SW인재페스티벌 우수작품관 부스 운영",
      "url": "https://github.com/Sehee-Lee-01/capstone-2022-10"
    }
  ]
}
